    JSR hw_init
    JSR main
    
:main
SET A, hello_world_string
SET X, 5
SET Y, 4
JSR printf

SET PC, end

:end
SET PC, end

:hw_init
HWN Z                                   
IFE Z, 0                                
    SET PC, end                         
                                            
    :init_hardware_loop                     
    SUB Z, 1
    HWQ Z           
	
    IFE A, 0xF615
        IFE B, 0x7349
            JSR display_init
			
    IFE A, 0x7406
        IFE B, 0x30CF
            JSR keyboard_init
		
    IFE A, 0xB402
        IFE B, 0x12D0
            JSR clock_init
			
    IFE Z, 0
        SET PC, POP
    SET PC, init_hardware_loop
        
    :display_init
    SET [display_address], Z
    
    SET A, 0
    SET B, [video_mem]
    HWI Z
    
    SET A, 3
    SET B, [border_color]
    HWI Z
    
    SET PC, POP
    
    :keyboard_init
    SET [keyboard_address], Z
    SET PC, POP
    
    :clock_init
    SET [clock_address], Z
    SET PC, POP

:printf
SET B, [video_mem]
    
    :set_position
        :position_y
        MUL Y, 32
        ADD B, Y
        :position_x
        ADD B, X
        
    :next_char
    SET C, [A]
    IFE C, 0
        SET PC, draw_cursor
    BOR C, [color]
    SET [B], C
    ADD B, 1
    ADD A, 1
    SET PC, next_char
    
    :draw_cursor
    SET [B], [cursor]
    SET PC, POP

:display_address
DAT 0x0000
:keyboard_address
DAT 0x0000
:clock_address
DAT 0x0000

:video_mem
DAT 0x8000
:border_color
DAT 0x8

:color
DAT 0xF000
:cursor
DAT 0xF09F

:hello_world_string
DAT "Hello, World!", 0